////////////////////////////////////////////////////////////

jsnake
A c++ implementation of snake using the ncures library
It is named after me, but humorously looks like it was written
in java/js by its name.

////////////////////////////////////////////////////////////

Play:

The goal of the game is to collect the food to lengthen your snake
until your snake is big enough to fill the entire screen.

Crashing into a wall or yourself kills you.

You can move with the Arrows Keys, WASD, or Vim keys ( hjkl )

'p' pauses the game, 'q' quits

////////////////////////////////////////////////////////////

Installation:

This game requires the ncurses library to compile
It can be installed easily through most UNIX package managers,
usually under the name ncurses or ncurses-dev

The Makefile assumes you use the g++ compiler and that
/usr/local/bin/ is a directory that is on the user's path
If not, further configuration may be required

$make && make install

$make            will compile the source code
$make install    will copy the binary to /usr/local/bin/ , which 
                 is part of the default path for most systems, allowing
                 you to run the binary from any directory 
                 ( may require sudo privleges )
$make clean      will remove the binaries from the local directory
$make uninstall  will remove the binaries from /usr/local/bin/  
                 ( may require sudo privleges )

Any changed to the source code require 
$make && make install

////////////////////////////////////////////////////////////

Source code options:

Many options are available by changing constants on the 
constexpr sections of the jsnake.cpp file

Here are a few:

SCALING_FACT defines the number of 'row/col' boxes that make up a logical square in the game
   This has the effect of 'magnifying' the game
   This may make the game easier to play, but the 'TICK_LENGTH' needs to be adjusted appropriately
   so the snake doesnt look or feel like it is moving too fast [  is the default ]

'COLS_PER_ROW' is a constant to try to make col/rows square
   A value of 1 makes the grid 1 row per 1 col, a value of 2 makes the grid
   2 cols per 1 row. [ 2 is default ]

STARTING_LENGTH defines how long the snake is to begin
   Beware that long starting lengths can cause near instant death on
   spawn [ 5 is the default ]

LENGTH_PER_FOOD determines how much the snake should grow per food eaten 
   [ 1 is the default ]


The game calculates frames once every 'TICK_LENGTH' ms
   'VERT_RATIO'  is a multiplier so that ticks when the
   snake is traveling up/down are 'VERT_RATIO' * TICK_LENGTH ms 
   and ticks when the snake is going Left and Right are 'TICK_LENGTH' ms
   This can offer additional tweaking beyond COLS_PER_ROW
   Keep in mind appropriate VERT_RATIO changes with COLS_PER_ROW

   TICK_LENGTH should be roughly from 60 - 150ms [ 125   is default ]
   VERT_RATIO should be roughly from  1 - 1.5    [ 1.00  is default ]

The colors of the Snake_Head, Body, and Food can be adjsuted on the lines
   starting init_pair

/////////////////////////////////////////////////////////

Future Work:

-A greeting menu with options for size, ticks, etc, instead of making them
 constexpr's in the source code

-CLI options for a fixed size game, rather than scaling to terminal size

-Some file to store custom keybindings, local highscores, etc

/////////////////////////////////////////////////////////

JOSEPH SHAKER 2018
Please send all inquires to: jshakes213@gmail.com
